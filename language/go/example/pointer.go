// 포인터 : 메모리 주소를 값으로 갖는 타입. 메모리 공간을 가리킴
// 포인터 변수 : 메모리 주소값을 변수값으로 가질 수 있는 변수
//  => 포인터를 이용하면 포인터가 가리키고 있는 메모리 공간의 값을 읽을 수도, 변경할 수도 있음
// 
// 포인터변수는 값을 초기화하지 않을 경우 기본값 nil을 가짐.
// nil은 유효하지 않는 메모리 주소값으로, 어떤 메모리 공간도 가리키고 있지 않는 상태


package main

import "fmt"

func main() {
  
  // int 타입 변수 선언
  var a int       // int 타입 변수 a
  // 포인터 변수 선언 : 가리키는 데이터 타입 앞에 *을 붙여서 선언
  var p *int      // int 타입 변수를 가리키는 포인터 변수 p
  
  p = &a          // a의 메모리 주소값을 포인터 변수 p에 대입
  
  a = 10          // a값 할당
  
  fmt.Printf("%d \n", p)      // p값 출력 => 즉, a의 주소값 출력
  fmt.Printf("%d \n", *p)     // p가 가리키는 메모리 주소에 해당하는 값 출력 => 즉, a의 값 출력
  
  *p = 20         // p가 가리키는 메모리 공간의 값 변경 => 즉, a=20과 같음
  
  fmt.Printf("%d \n", *p)     // p가 가리키는 메모리 주소에 해당하는 값 출력 => 즉, 변경된 a의 값인 20 출력
  
}
